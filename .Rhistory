View(vec_nu)
chartJSRadar(scores=vec_nu,labs = vec_nam)
chartJSRadar(scores=vec_nu,labs = names(vec_nu))
cleaned_data <- fifa_players %>% select(Nationality,Club) %>% na.omit()
number_of_nationality_in_club <- cleaned_data%>%filter(Club!="") %>% group_by(Club, Nationality) %>% summarise(count = n()) %>% group_by(Club) %>% summarise(N_nation=n())  %>% arrange(desc(N_nation))%>% mutate(Club = factor(Club, level=unique(Club)))
DIV_in_club <- cleaned_data %>%filter(Club!="")%>% group_by(Club) %>% summarise(DIV = DIV(Nationality)) %>%filter(Club!="")%>% arrange(DIV)%>%mutate(Club = factor(Club,level=unique(Club)))  # arrange(desc(DIV)) %>%
# Plot number of different nationalities in each club
g <- ggplot(data = number_of_nationality_in_club %>% head(8), aes(x = Club, y = N_nation,fill = Club))
g + geom_bar(stat="identity")+ theme(axis.text.x = element_text(face = "bold", size = 9, angle = -90, hjust = 0)) + ylab('new_title_y') +
labs(title="new_title")
g
# Plot DIV (diversity?) of different nationalities in each club
g <- ggplot(data = DIV_in_club %>% head(12),aes(x = Club,y = DIV, fill = Club))
g <- g + geom_bar(stat="identity") + theme(axis.text.x = element_text(face = "bold", size = 9, angle = -90, hjust = 0)) + ylab('new_title_y') +
labs(title="new_title")
g
# A measure of category's diversity
DIV <- function(category_vec){
t <- table(category_vec)
p <- t/sum(t)
return(sum(p^2))
}
cleaned_data <- fifa_players %>% select(Nationality,Club) %>% na.omit()
number_of_nationality_in_club <- cleaned_data %>% group_by(Club, Nationality) %>% summarise(count = n()) %>% group_by(Club) %>% summarise(N_nation=n()) %>% arrange(desc(N_nation)) %>% mutate(Club = factor(Club, level=unique(Club)))
DIV_in_club <- cleaned_data %>% group_by(Club) %>% summarise(DIV = DIV(Nationality))%>% arrange(DIV)%>% mutate(Club = factor(Club,level=unique(Club)))  # arrange(desc(DIV)) %>%
# Plot number of different nationalities in each club
g <- ggplot(data = number_of_nationality_in_club %>% head(8), aes(x = Club, y = N_nation,color = Club))
g + geom_bar(stat="identity")
# Plot DIV (diversity?) of different nationalities in each club
g <- ggplot(data = DIV_in_club %>% head(12),aes(x = Club,y = DIV, color = Club))
g <- g + geom_bar(stat="identity")
cleaned_data <- fifa_players %>% select(Nationality,Club) %>% na.omit()
number_of_nationality_in_club <- cleaned_data%>%filter(Club!="") %>% group_by(Club, Nationality) %>% summarise(count = n()) %>% group_by(Club) %>% summarise(N_nation=n())  %>% arrange(desc(N_nation))%>% mutate(Club = factor(Club, level=unique(Club)))
DIV_in_club <- cleaned_data %>%filter(Club!="")%>% group_by(Club) %>% summarise(DIV = DIV(Nationality)) %>%filter(Club!="")%>% arrange(DIV)%>%mutate(Club = factor(Club,level=unique(Club)))  # arrange(desc(DIV)) %>%
# Plot number of different nationalities in each club
g <- ggplot(data = number_of_nationality_in_club %>% head(8), aes(x = Club, y = N_nation,fill = Club))
g + geom_bar(stat="identity")+ theme(axis.text.x = element_text(face = "bold", size = 9, angle = -90, hjust = 0)) + ylab('new_title_y') +
labs(title="new_title")
g
# Plot DIV (diversity?) of different nationalities in each club
g <- ggplot(data = DIV_in_club %>% head(12),aes(x = Club,y = DIV, fill = Club))
g <- g + geom_bar(stat="identity") + theme(axis.text.x = element_text(face = "bold", size = 9, angle = -90, hjust = 0)) + ylab('new_title_y') +
labs(title="new_title")
g
library(ggplot2)
library(dplyr)
library(corrplot)
library(scales)   # needed for formatting y-axis labels to non-scientific type
library(radarchart)
library(tidyr)
library(tidyverse)
library(reshape2) # melt
library(ggthemes)
library(rworldmap) # world map
library(modelr)
library(radarchart) #Spider chart
############################################
library(e1071) #Q1.c -  skewness() and kurtosis()
library(grid) # geom_segment
library(ggrepel)# Use ggrepel::geom_label_repel
options("scipen"=100, "digits"=4)  # avoid scientific display of digits. Take 4 digits.
install.packages(c("gtools", "quantreg"))
fifa_players <- data.frame(read.csv(url("https://raw.githubusercontent.com/DataScienceHU/DataAnalysisR_2021/master/data/fifa_data.csv")))
# Pre-processing:
for (i in c(3,6,7,10:71)) {
fifa_players[,i]<-as.numeric((fifa_players[,i]))
}
fifa<-na.omit(fifa_players)
fifa_players <- fifa
fifa_players_info <- fifa[,c(1:11)] # players general info
fifa_players_attribures <- fifa[,c(1,12:45, 6)] # players different skills. Add overall
fifa_players_positions <- fifa[,c(1,46:72,6,7)] # players ability at different positions . Add overall
fifa_players_indicators <- fifa[,c(1,6,7,10,11)] # players general ability
group_2D <- group_by(fifa,Nationality)
summ_2D <- summarize(group_2D, med_pot=median(Potential))
sPDF <- joinCountryData2Map( summ_2D, joinCode = "NAME"
, nameJoinColumn = "med_pot")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF, nameColumnToPlot="med_pot" )
data(countryExData)
countryExData[1:250,1:5]
#Using country2Region to calculate mean ENVHEALTH in Stern regions.
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapByRegion( fifa, nameDataColumn="Potential", joinCode="Name", nameJoinColumn="Nationality", regionType="Stern", FUN="mean")
group_2D <- group_by(fifa,Nationality)
summ_2D <- summarize(group_2D, med_pot=median(Potential))
sPDF <- joinCountryData2Map( summ_2D, joinCode = "NAME"
, nameJoinColumn = "med_pot")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF, nameColumnToPlot="med_pot" )
data(countryExData)
countryExData[1:250,1:5]
group_2D <- group_by(fifa,Nationality)
summ_2D <- summarize(group_2D, med_pot=median(Potential))
sPDF <- joinCountryData2Map( summ_2D, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF, nameColumnToPlot="med_pot",,catMethod = "fixedWidth",
oceanCol = "steelblue1", missingCountryCol = "white",
mapTitle = "The median potential  of players by country",
aspect = "variable")
group_2D <- group_by(fifa,Nationality)
summ_2D <- summarize(group_2D, med_pot=median(Potential))
sPDF <- joinCountryData2Map( summ_2D, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF, nameColumnToPlot="med_pot",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "white",
mapTitle = "The median potential  of players by country",
aspect = "variable")
group_2D <- group_by(fifa,Nationality)
summ_2D <- summarize(group_2D, med_pot=median(Potential))
sPDF <- joinCountryData2Map( summ_2D, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF, nameColumnToPlot="med_pot",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "black",
mapTitle = "The median potential  of players by country",
aspect = "variable")
group_2D <- group_by(fifa,Nationality)
summ_2D <- summarize(group_2D, med_pot=median(Potential))
sPDF <- joinCountryData2Map( summ_2D, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF, nameColumnToPlot="med_pot",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "black",
mapTitle = "The median ratio potential and value of players by country",
aspect = "variable")
group_2E <- group_by(fifa,Nationality)
summ_2E <- summarize(group_2E, med_pot_val=median(Potential)/median(Value))
summ_2E$med_pot_val = round(summ_2E$med_pot_val,5)
filter_2E <- filter(summ_2E,med_pot_val != Inf)
sPDF_2E <- joinCountryData2Map( filter_2E, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF_2E, nameColumnToPlot="med_pot_val",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "black",
mapTitle = "The ratio of median potential and median value of players by country",
aspect = "variable")
group_2E <- group_by(fifa,Nationality)
summ_2E <- summarize(group_2E, med_pot_val=median(Value)/median(Potential))
#summ_2E$med_pot_val = round(summ_2E$med_pot_val,5)
filter_2E <- filter(summ_2E,med_pot_val != Inf)
sPDF_2E <- joinCountryData2Map( filter_2E, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF_2E, nameColumnToPlot="med_pot_val",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "black",
mapTitle = "The ratio of median potential and median value of players by country",
aspect = "variable")
vec_name <- names(fifa_players_positions)
m = matrix(0,53,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
# filter_data <- filter(fifa_players_positions,
#               grepl(vec_name[i],Preferred.Positions)==TRUE)
new_data3C[(2*(i)-1):(2*(i)),] <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(2)
}
GK_filter <- filter(fifa_players_positions,Preferred.Positions=="GK ")
new_data3C[53,] <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
uniq_palyer  <-  new_data3C %>%
distinct(ID, .keep_all = TRUE)
top_11_player <- uniq_palyer %>%
arrange(desc(uniq_palyer[,29])) %>%
head(11)
top_11_player <- left_join(top_11_player, fifa[1:2] ,by=c("ID"="ID"))
top_11_player <-select(top_11_player,Name,Overall)
top_6_player <- filter(fifa,Name =="Cristiano Ronaldo"|Name=="L. Messi"|Name=="M. Neuer"|Name=="R. Lewandowski"|Name=="Sergio Ramos"|Name=="T. Kroos")
top_6_player_10_skills <- select(top_6_player,Name,names(top_10_average_cor_skill))
filter_2E
group_2E <- group_by(fifa,Nationality)
summ_2E <- summarize(group_2E, med_pot_val=median(Value)/median(Potential))
#summ_2E$med_pot_val = round(summ_2E$med_pot_val,5)
filter_2E <- filter(summ_2E,med_pot_val != Inf)
sPDF_2E <- joinCountryData2Map( filter_2E, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF_2E, nameColumnToPlot="med_pot_val",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "black",
mapTitle = "The ratio of median potential and median value of players by country",
aspect = "variable")
filter_2E
View(filter_2E)
group_2E <- group_by(fifa,Nationality)
summ_2E <- summarize(group_2E, med_pot_val=median(Potential)/median(Value))
#summ_2E$med_pot_val = round(summ_2E$med_pot_val,5)
filter_2E <- filter(summ_2E,med_pot_val != Inf)
sPDF_2E <- joinCountryData2Map( filter_2E, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF_2E, nameColumnToPlot="med_pot_val",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "black",
mapTitle = "The ratio of median potential and median value of players by country",
aspect = "variable")
group_2E <- group_by(fifa,Nationality)
summ_2E <- summarize(group_2E, med_pot_val=median(Potential)/median(Value))
summ_2E$med_pot_val = round(summ_2E$med_pot_val,5)
filter_2E <- filter(summ_2E,med_pot_val != Inf)
sPDF_2E <- joinCountryData2Map( filter_2E, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF_2E, nameColumnToPlot="med_pot_val",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "black",
mapTitle = "The ratio of median potential and median value of players by country",
aspect = "variable")
group_2E <- group_by(fifa,Nationality)
summ_2E <- summarize(group_2E, med_pot_val=-(median(Value)/median(Potential)))
#summ_2E$med_pot_val = round(summ_2E$med_pot_val,5)
filter_2E <- filter(summ_2E,med_pot_val != Inf)
sPDF_2E <- joinCountryData2Map( filter_2E, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF_2E, nameColumnToPlot="med_pot_val",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "black",
mapTitle = "The ratio of median potential and median value of players by country",
aspect = "variable")
group_2D <- group_by(fifa,Nationality)
summ_2D <- summarize(group_2D, med_pot=median(Potential))
sPDF <- joinCountryData2Map( summ_2D, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF, nameColumnToPlot="med_pot",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "white",
mapTitle = "The median potential  of players by country",
aspect = "variable")
group_2E <- group_by(fifa,Nationality)
summ_2E <- summarize(group_2E, med_pot_val=-(median(Value)/median(Potential)))
#summ_2E$med_pot_val = round(summ_2E$med_pot_val,5)
filter_2E <- filter(summ_2E,med_pot_val != Inf)
sPDF_2E <- joinCountryData2Map( filter_2E, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF_2E, nameColumnToPlot="med_pot_val",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "white",
mapTitle = "The ratio of median potential and median value of players by country",
aspect = "variable")
group_2E <- group_by(fifa,Nationality)
summ_2E <- summarize(group_2E, med_pot_val=(median(Value)/median(Potential)))
#summ_2E$med_pot_val = round(summ_2E$med_pot_val,5)
filter_2E <- filter(summ_2E,med_pot_val != Inf)
sPDF_2E <- joinCountryData2Map( filter_2E, joinCode = "NAME"
, nameJoinColumn = "Nationality")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData( sPDF_2E, nameColumnToPlot="med_pot_val",,catMethod = "fixedWidth",
oceanCol = "blue", missingCountryCol = "white",
mapTitle = "The ratio of median potential and median value of players by country",
aspect = "variable")
potential_players <- subset(fifa_players, Overall>70 & Age<=21)
lm.potential <- lm(Potential ~ (Wage), data=potential_players)
potential_players$resid <- round(resid(lm.potential), 3) # potential_players %>% add_residuals(lm.potential)
potential_players$MarketWage <- round((potential_players$Potential - lm.potential$coefficients[[1]]) / lm.potential$coefficients[[2]], 3)
ggplot(data = potential_players,aes(x=Wage,y =Potential ))+
#  scale_x_continuous(trans='log10')+
scale_y_continuous(labels = comma)+
geom_smooth(method='lm', formula= y~x) +
labs(title="e. Players Potential vs. Wage") +
geom_point(aes(color=Overall))
# Find table with best residuals
print(potential_players %>% arrange(desc(resid)) %>% select(Name, Age, Potential, Overall, resid, Wage, MarketWage) %>% head(10))
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3, nudge_x = 0.05,col="red")
filter_2C <- filter(fifa,Age < 21 & Potential > 70)
new_table2c <- select(filter_2C,Name,Age,Overall,Potential,Value)
reg_val_pot <- lm(Potential ~ Value, data = new_table2c)
reg_2C <- lm(data=new_table2c,Potential ~ Value)
sum_red_2C <- summary(reg_2C)
intercept <- sum_red_2C$coefficients[1]
slope <- sum_red_2C$coefficients[2]
resid <- resid(reg_2C) #List of residuals
new_table2c$real_value <- resid
new_table2c1 <- new_table2c %>%
arrange(desc(real_value)) %>%
head(10)
new_table2c2 <- new_table2c %>%
arrange(desc(real_value))
new_table2c1$real_value <- (new_table2c1$Potential*(1/slope))-intercept
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3, nudge_x = 0.05,col="red")
p2C1
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 5, nudge_x = 0.05,col="red")
p2C1
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 2, nudge_x = 0.05,col="red")
p2C1
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3, nudge_x = 0.2,col="red")
p2C1
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3,check_overlap = TRUE, nudge_x = 0.2,col="red")
p2C1
filter_2C <- filter(fifa,Age < 21 & Potential > 70)
new_table2c <- select(filter_2C,Name,Age,Overall,Potential,Value)
reg_val_pot <- lm(Potential ~ Value, data = new_table2c)
reg_2C <- lm(data=new_table2c,Potential ~ Value)
sum_red_2C <- summary(reg_2C)
intercept <- sum_red_2C$coefficients[1]
slope <- sum_red_2C$coefficients[2]
resid <- resid(reg_2C) #List of residuals
new_table2c$real_value <- resid
new_table2c1 <- new_table2c %>%
arrange(desc(real_value)) %>%
head(10)
new_table2c2 <- new_table2c %>%
arrange(desc(real_value))
new_table2c1$real_value <- (new_table2c1$Potential*(1/slope))-intercept
print(new_table2c1)
p2C <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_text(aes(label=Name), size = 2.5, hjust='bottom',check_overlap = TRUE, nudge_x = 0.05)+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3, nudge_x = 0.05,col="red")
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3,check_overlap = TRUE, nudge_x = 0.2,col="red")
p2C1
p2C
corrplot(cor_attributes, order='hclust', tl.cex = 0.7,
mar=c(0,0,1,0), title="a. Pairwise correlations between skills")
cor_attributes <- cor(fifa_players_attribures[!rowSums(fifa_players_attribures[,-c(1,13:17)])==0,-c(1,13:17)])
# a. correlation plot for skills:
corrplot(cor_attributes, order='hclust', tl.cex = 0.7,
mar=c(0,0,1,0), title="a. Pairwise correlations between skills")
P3A <-corrplot(cor_met_3A_pos,title="heat map of fifa players positions of players skills")
cor_met_3A_pos <- cor(fifa_players_positions[2:27],fifa_players_positions[2:27])
P3A <-corrplot(cor_met_3A_pos,title="heat map of fifa players positions of players skills")
P3A
P3A <-corrplot(cor_met_3A_pos) + title(title="heat map of fifa players positions of players skills")
P3A <-corrplot(cor_met_3A_pos,title="heat map of fifa players positions of players skills",tl.cex = 0.5)
P3A <-corrplot(cor_met_3A_pos,title="heat map of fifa players positions of players skills",tl.cex = 0.5,order='hclust')
P3A <-corrplot(cor_met_3A_pos,title="heat map of fifa players positions of players skills",tl.cex = 0.5,order='hclust',mar=c(0,0,1,0))
P3A <-corrplot(cor_met_3A_pos,title="heat map of fifa players positions of players skills",tl.cex = 0.5,order='hclust',mar=c(0,1,1,0))
P3A <-corrplot(cor_met_3A_pos,title="heat map of fifa players positions of players skills",tl.cex = 0.5,order='hclust',mar=1)
P3A <-corrplot(cor_met_3A_pos,title="heat map of fifa players positions of players skills",tl.cex = 0.5,order='hclust',mar=c(0,1,1,0))
P3A <-corrplot(cor_met_3A_pos,title="heat map of fifa players positions of players skills",tl.cex = 0.5,order='hclust',mar=c(0,3,1,0))
P3A
cor_met_3A_pos <- cor(fifa_players_positions[2:27],fifa_players_positions[2:27])
P3A <-corrplot(cor_met_3A_pos,title="heat map of fifa players positions of ",tl.cex = 0.5,order='hclust',mar=c(0,3,1,0))
cor_met_3A1_pos <- cor(fifa_players_positions[2:27],
new_table3A[1:29])
cor_met_3A_pos <- cor(fifa_players_positions[2:27],fifa_players_positions[2:27])
P3A <-corrplot(cor_met_3A_pos,title="heat map of fifa players positions of ",tl.cex = 0.5,order='hclust',mar=c(0,3,1,0))
new_table3A <- fifa_players_attribures[2:35]
new_table3A[,12:16] <- NULL
cor_met_3A1_pos <- cor(fifa_players_positions[2:27],
new_table3A[1:29])
P3A1 <-corrplot(cor_met_3A1_pos,title="heat map of fifa players positions of players skills",tl.cex = 0.5,order='hclust',mar=c(0,3,1,0))
cor_met_3A1_pos <- cor(fifa_players_positions[2:27],
new_table3A[1:29])
P3A1 <-corrplot(cor_met_3A1_pos,title="heat map of fifa players positions of players skills",tl.cex = 0.5,mar=c(0,3,1,0))
new_table_3B <- left_join(fifa_players_attribures, fifa_players_indicators ,by=c("ID"="ID" ,"Overall"="Overall"))
cor_met_3B <- cor(new_table_3B[36:39],new_table_3B[2:35])
corrplot(cor_met_3B, method="circle",tl.cex =1,col=c("black", "white"),
bg="lightblue")+ theme(axis.text.x = element_text(face = "bold", size = 9, angle = -90, hjust = 0))+title("Cor plot of fifa players skills",xlab="player skills",ylab="player indicators")
sum_cor <- apply(cor_met_3B,2,sum)
ave_cor <- sum_cor/4
sort_top_ave <- sort(ave_cor)
top_10_average_cor_skill <-sort_top_ave[34:25]
top_10_table <- data.frame(top_10_average_cor_skill)
radarDF <- gather(top_6_player_10_skills, key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
vec_name <- names(fifa_players_positions)
m = matrix(0,53,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
# filter_data <- filter(fifa_players_positions,
#               grepl(vec_name[i],Preferred.Positions)==TRUE)
new_data3C[(2*(i)-1):(2*(i)),] <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(2)
}
GK_filter <- filter(fifa_players_positions,Preferred.Positions=="GK ")
new_data3C[53,] <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
uniq_palyer  <-  new_data3C %>%
distinct(ID, .keep_all = TRUE)
top_11_player <- uniq_palyer %>%
arrange(desc(uniq_palyer[,29])) %>%
head(11)
top_11_player <- left_join(top_11_player, fifa[1:2] ,by=c("ID"="ID"))
top_11_player <-select(top_11_player,Name,Overall)
top_6_player <- filter(fifa,Name =="Cristiano Ronaldo"|Name=="L. Messi"|Name=="M. Neuer"|Name=="R. Lewandowski"|Name=="Sergio Ramos"|Name=="T. Kroos")
top_6_player_10_skills <- select(top_6_player,Name,names(top_10_average_cor_skill))
radarDF <- gather(top_6_player_10_skills, key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(scores = radarDF, maxScale = 100, showToolTipLabel = TRUE)
fifa_players_positions_small = left_join(fifa_players_positions_small,fifa_players_info[,c(1,2)],"ID")
# b. Ability vs. skill (add title)
fifa_players_positions_small<-fifa_players_positions[,c(1,2,3,6,18,25,27,29)]  # hard-coded solution: how were these positions selected?
corrplot(cor(fifa_players_attribures[,-c(1,13:17,36)],fifa_players_positions_small[,-c(1,28)]), method="circle",
is.corr = FALSE, cl.lim = c(0, 1),  # all correlations are positive !
mar=c(0,0,1,0), title="b. Correlations between skills and positions abilities")
cor_position_attribures<-as.data.frame(cor(fifa_players_attribures[,-c(1,13:17)],fifa_players_positions[,c(2,3,6,18,25,27,29)]))
# 7 skills mostly correlated for player's Overall performance
sort(rowMeans(cor_position_attribures),decreasing = T) %>% head(7)
#cor_position_attribures$abilities = row.names(cor_position_attribures)
#cor_position_attribures %>% arrange(desc(Overall)) %>% head(8)
#Selecting top players by rating from data
fifa_players_positions_small = left_join(fifa_players_positions_small,fifa_players_info[,c(1,2)],"ID")
team_selection <- function(df=fifa, positions){
#param df: fifa18 football dataset.
#param posotions: positions to choose from.
#return : team that the players chosen are the best in their individual position and in such a way that maximize the team's overall average score.
team = data.frame()
for (pos in positions) {
col_number = which(names(df)==pos)
Candidates = df[which(df[,col_number]==max(df[,col_number]) ),] # first, the players chosen are the best in their individual position.
if (nrow(Candidates)>1) {
Candidates = Candidates[which.max(Candidates$Overall),] # maximize the team's overall average score
}
df = df[-which(df$ID == Candidates$ID),] # Don't choose a player twice
if (nrow(team)==0) {
team = Candidates
}
else{
team = rbind(team,Candidates)
}
}
return(team)
}
top6 = team_selection(positions = c("CB","CAM", "CM", "RB", "RW", "ST"))
radarDF <- top6 %>% select(Name,Overall,Acceleration,Aggression,Agility,Balance,Ball.control,Composure,Crossing,Curve,Dribbling,Finishing,Free.kick.accuracy,Heading.accuracy,Interceptions,Jumping,Long.passing,Long.shots,Marking,Penalties,Positioning,Reactions,Short.passing,Shot.power,Sliding.tackle,Stamina,Standing.tackle,Vision,Volleys) %>% as.data.frame()
radarDF <- gather(radarDF, key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(scores = radarDF, maxScale = 100, showToolTipLabel = TRUE)
View(fifa_players_attribures)
View(fifa)
new_table3D <-left_join(fifa_players_attribures[2:35],fifa[1:3],by=c("ID"="ID" ,"Overall"="Overall"))
new_table3D <-left_join(fifa_players_attribures[1:35],fifa[1:3],by=c("ID"="ID" ,"Overall"="Overall"))
new_table3D <-left_join(fifa_players_attribures[1:35],fifa[1:3],by=c("ID"="ID" ))
filter_2A <- filter(new_table3D,Age <= 35)
group3D <- aggregate(.~ Age, data= filter_2A, FUN = mean)
View(group3D)
View(fifa)
filter_2A
filter_3D <- filter(new_table3D,Age <= 35)
View(filter_3D)
filter_3D <- filter(new_table3D,Age <= 35)
filter_3D$Name<- NULL
filter_3D$ID<- NULL
View(filter_3D)
group3D <- aggregate(.~ Age, data= filter_3D, FUN = mean)
View(group3D)
View(group3D)
ggplot(data=group3D, aes(x=Age, y=value, group=skills)) +
geom_line()+
ggtitle("Player's Abilities VS Age") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~skills) +
theme(legend.position="none")
ggplot(data=fifa_players_attribures_age_long, aes(x=Age, y=value, group=skills)) +
geom_line()+
ggtitle("Player's Abilities VS Age") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~skills) +
theme(legend.position="none")
fifa_players_attribures_age <- left_join(fifa_players_attribures[,-c(13:17)],fifa_players[,c(1,3)],"ID")
fifa_players_attribures_age <- fifa_players_attribures_age[,-1]
fifa_players_attribures_age <- fifa_players_attribures_age[fifa_players_attribures_age$Age<=35,]
fifa_players_attribures_age <- aggregate(.~ Age, data= fifa_players_attribures_age, FUN = mean)
fifa_players_attribures_age_long <- fifa_players_attribures_age %>%  gather(skills, value, -Age)
ggplot(data=fifa_players_attribures_age_long, aes(x=Age, y=value, group=skills)) +
geom_line()+
ggtitle("Player's Abilities VS Age") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~skills) +
theme(legend.position="none")
skills_per_age <-gather(skills, value, -Age)
skills_per_age <- gather(group3D,skills, value, -Age)
View(skills_per_age)
ggplot(data=skills_per_age, aes(x=Age, y=value, group=skills)) +
geom_line()+
ggtitle("Player's Abilities VS Age") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~skills)
ggplot(data=skills_per_age, aes(x=Age, y=value, group=skills)) +
geom_line()+
ggtitle("Player's Abilities VS Age") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~skills)  +
theme(legend.position="none")
ggplot(data=skills_per_age, aes(x=Age, y=value, group=skills)) +
geom_line(col="red")+
ggtitle("Player's Abilities VS Age") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~skills)  +
theme(legend.position="none")
ggplot(data=skills_per_age, aes(x=Age, y=value, group=skills),col="blue") +
geom_line(col="red")+
ggtitle("Player's Abilities VS Age") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~skills)  +
theme(legend.position="none")
ggplot(data=skills_per_age, aes(x=Age, y=value, group=skills),fill="blue") +
geom_line(col="red")+
ggtitle("Player's Abilities VS Age") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~skills)  +
theme(legend.position="none")
ggplot(data=skills_per_age, aes(x=Age, y=value, group=skills)) +
geom_line(col="red")+
ggtitle("Player's Abilities VS Age") +
theme(plot.title = element_text(hjust = 0.5),col="blue")+
facet_wrap(~skills)  +
theme(legend.position="none")
ggplot(data=skills_per_age, aes(x=Age, y=value, group=skills)) +
geom_line(col="red")+
ggtitle("Player's Abilities VS Age") +
theme(plot.title = element_text(hjust = 0.5),colour="blue")+
facet_wrap(~skills)  +
theme(legend.position="none")
ggplot(data=skills_per_age, aes(x=Age, y=value, group=skills)) +
geom_line(col="red")+
ggtitle("Player's Abilities VS Age") +
theme(plot.title = element_text(hjust = 0.5,colour="blue"))+
facet_wrap(~skills)  +
theme(legend.position="none")
