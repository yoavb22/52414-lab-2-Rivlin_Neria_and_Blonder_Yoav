#               grepl(vec_name[i],Preferred.Positions)==TRUE)
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(10)
new_data3C <- rbind(new_data3C,new_data)
}
View(new_data3C)
vec_name <- names(fifa_players_positions)
m = matrix(0,1,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
# filter_data <- filter(fifa_players_positions,
#               grepl(vec_name[i],Preferred.Positions)==TRUE)
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(5)
new_data3C <- rbind(new_data3C,new_data)
}
vec_name <- names(fifa_players_positions)
m = matrix(0,1,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
# filter_data <- filter(fifa_players_positions,
#               grepl(vec_name[i],Preferred.Positions)==TRUE)
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(5)
new_data <- filter(new_data,new_data[i]=new_data[1,i])
vec_name <- names(fifa_players_positions)
m = matrix(0,1,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
# filter_data <- filter(fifa_players_positions,
#               grepl(vec_name[i],Preferred.Positions)==TRUE)
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(5)
new_data <- filter(new_data,new_data[i]==new_data[1,i])
new_data3C <- rbind(new_data3C,new_data)
}
View(new_data)
View(new_data3C)
vec_name <- names(fifa_players_positions)
m = matrix(0,1,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
# filter_data <- filter(fifa_players_positions,
#               grepl(vec_name[i],Preferred.Positions)==TRUE)
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(10)
new_data <- filter(new_data,new_data[i]==new_data[1,i])
new_data3C <- rbind(new_data3C,new_data)
}
GK_filter <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
GK_filter <- filter(fifa_players_positions,Preferred.Positions=="GK ")
GK_filter <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
new_data3C <- new_data3C[2:43]
new_data3C <- new_data3C[2:43,]
View(new_data3C)
new_data3C <- new_data3C[2:43,]
GK_filter <- filter(fifa_players_positions,Preferred.Positions=="GK ")
GK_filter <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
new_data3C <- rbind(new_data3C,GK_filter)
vec_name <- names(fifa_players_positions)
m = matrix(0,1,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
# filter_data <- filter(fifa_players_positions,
#               grepl(vec_name[i],Preferred.Positions)==TRUE)
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(10)
new_data <- filter(new_data,new_data[i]==new_data[1,i])
new_data3C <- rbind(new_data3C,new_data)
}
new_data3C <- new_data3C[2:43,]
GK_filter <- filter(fifa_players_positions,Preferred.Positions=="GK ")
GK_filter <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
new_data3C <- rbind(new_data3C,GK_filter)
View(new_data3C)
uniq_palyer  <-  new_data3C %>%
distinct(ID, .keep_all = TRUE)
vec_name <- names(fifa_players_positions)
m = matrix(0,1,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
# filter_data <- filter(fifa_players_positions,
#               grepl(vec_name[i],Preferred.Positions)==TRUE)
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(10)
new_data <- filter(new_data,new_data[i]==new_data[1,i])
new_data3C <- rbind(new_data3C,new_data)
}
new_data3C <- new_data3C[2:43,]
GK_filter <- filter(fifa_players_positions,Preferred.Positions=="GK ")
GK_filter <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
new_data3C <- rbind(new_data3C,GK_filter)
uniq_palyer  <-  new_data3C %>%
distinct(ID, .keep_all = TRUE)
View(uniq_palyer)
top_11_player <- uniq_palyer %>%
arrange(desc(uniq_palyer[,29])) %>%
head(11)
View(top_11_player)
top_11_player <- left_join(top_11_player, fifa[1:2] ,by=c("ID"="ID"))
top_11_player <-select(top_11_player,Name,Overall)
top_6_player <- filter(fifa,Name =="Cristiano Ronaldo"|Name=="L. Messi"|Name=="M. Neuer"|Name=="A. Vidal"|Name=="Sergio Ramos"|Name=="T. Kroos")
top_6_player_10_skills <- select(top_6_player,Name,names(top_10_average_cor_skill))
vec_name <- names(fifa_players_positions)
m = matrix(0,1,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(10)
new_data <- filter(new_data,new_data[i]==new_data[1,i])
new_data3C <- rbind(new_data3C,new_data)
}
new_data3C <- new_data3C[2:43,]
GK_filter <- filter(fifa_players_positions,Preferred.Positions=="GK ")
GK_filter <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
new_data3C <- rbind(new_data3C,GK_filter)
uniq_palyer  <-  new_data3C %>%
distinct(ID, .keep_all = TRUE)
top_11_player <- uniq_palyer %>%
arrange(desc(uniq_palyer[,29])) %>%
head(11)
top_11_player <- left_join(top_11_player, fifa[1:2] ,by=c("ID"="ID"))
top_11_player <-select(top_11_player,Name,Overall)
top_6_player <- filter(fifa,Name =="Cristiano Ronaldo"|Name=="L. Messi"|Name=="M. Neuer"|Name=="A. Vidal"|Name=="Sergio Ramos"|Name=="T. Kroos")
top_6_player_10_skills <- select(top_6_player,Name,names(top_10_average_cor_skill))
new_table_3B <- left_join(fifa_players_attribures, fifa_players_indicators ,by=c("ID"="ID" ,"Overall"="Overall"))
cor_met_3B <- cor(new_table_3B[36:39],new_table_3B[2:35])
corrplot(cor_met_3B, method="circle",tl.cex =1,col=c("black", "white"),
bg="lightblue")+ theme(axis.text.x = element_text(face = "bold", size = 9, angle = -90, hjust = 0))+title("Cor plot of fifa players skills",xlab="player skills",ylab="player indicators")
sum_cor <- apply(cor_met_3B,2,sum)
ave_cor <- sum_cor/4
sort_top_ave <- sort(ave_cor)
top_10_average_cor_skill <-sort_top_ave[34:25]
top_10_table <- data.frame(top_10_average_cor_skill)
vec_name <- names(fifa_players_positions)
m = matrix(0,1,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(10)
new_data <- filter(new_data,new_data[i]==new_data[1,i])
new_data3C <- rbind(new_data3C,new_data)
}
new_data3C <- new_data3C[2:43,]
GK_filter <- filter(fifa_players_positions,Preferred.Positions=="GK ")
GK_filter <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
new_data3C <- rbind(new_data3C,GK_filter)
uniq_palyer  <-  new_data3C %>%
distinct(ID, .keep_all = TRUE)
top_11_player <- uniq_palyer %>%
arrange(desc(uniq_palyer[,29])) %>%
head(11)
top_11_player <- left_join(top_11_player, fifa[1:2] ,by=c("ID"="ID"))
top_11_player <-select(top_11_player,Name,Overall)
top_6_player <- filter(fifa,Name =="Cristiano Ronaldo"|Name=="L. Messi"|Name=="M. Neuer"|Name=="A. Vidal"|Name=="Sergio Ramos"|Name=="T. Kroos")
top_6_player_10_skills <- select(top_6_player,Name,names(top_10_average_cor_skill))
radarDF <- gather(top_6_player_10_skills, key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(scores = radarDF, maxScale = 100, showToolTipLabel = TRUE)
library(ggplot2)
library(dplyr)
library(corrplot)
library(scales)   # needed for formatting y-axis labels to non-scientific type
library(radarchart)
library(tidyr)
library(tidyverse)
library(reshape2) # melt
library(ggthemes)
library(rworldmap) # world map
library(modelr)
library(radarchart) #Spider chart
############################################
library(e1071) #Q1.c -  skewness() and kurtosis()
library(grid) # geom_segment
library(ggrepel)# Use ggrepel::geom_label_repel
options("scipen"=100, "digits"=4)  # avoid scientific display of digits. Take 4 digits.
fifa_players <- data.frame(read.csv(url("https://raw.githubusercontent.com/DataScienceHU/DataAnalysisR_2021/master/data/fifa_data.csv")))
# Pre-processing:
for (i in c(3,6,7,10:71)) {
fifa_players[,i]<-as.numeric((fifa_players[,i]))
}
fifa<-na.omit(fifa_players)
fifa_players <- fifa
fifa_players_info <- fifa[,c(1:11)] # players general info
fifa_players_attribures <- fifa[,c(1,12:45, 6)] # players different skills. Add overall
fifa_players_positions <- fifa[,c(1,46:72,6,7)] # players ability at different positions . Add overall
fifa_players_indicators <- fifa[,c(1,6,7,10,11)] # players general ability
new_table_3B <- left_join(fifa_players_attribures, fifa_players_indicators ,by=c("ID"="ID" ,"Overall"="Overall"))
cor_met_3B <- cor(new_table_3B[36:39],new_table_3B[2:35])
corrplot(cor_met_3B, method="circle",tl.cex =1,col=c("black", "white"),
bg="lightblue")+ theme(axis.text.x = element_text(face = "bold", size = 9, angle = -90, hjust = 0))+title("Cor plot of fifa players skills",xlab="player skills",ylab="player indicators")
sum_cor <- apply(cor_met_3B,2,sum)
ave_cor <- sum_cor/4
sort_top_ave <- sort(ave_cor)
top_10_average_cor_skill <-sort_top_ave[34:25]
top_10_table <- data.frame(top_10_average_cor_skill)
vec_name <- names(fifa_players_positions)
m = matrix(0,1,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(10)
new_data <- filter(new_data,new_data[i]==new_data[1,i])
new_data3C <- rbind(new_data3C,new_data)
}
new_data3C <- new_data3C[2:43,]
GK_filter <- filter(fifa_players_positions,Preferred.Positions=="GK ")
GK_filter <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
new_data3C <- rbind(new_data3C,GK_filter)
uniq_palyer  <-  new_data3C %>%
distinct(ID, .keep_all = TRUE)
top_11_player <- uniq_palyer %>%
arrange(desc(uniq_palyer[,29])) %>%
head(11)
top_11_player <- left_join(top_11_player, fifa[1:2] ,by=c("ID"="ID"))
top_11_player <-select(top_11_player,Name,Overall)
top_6_player <- filter(fifa,Name =="Cristiano Ronaldo"|Name=="L. Messi"|Name=="M. Neuer"|Name=="A. Vidal"|Name=="Sergio Ramos"|Name=="T. Kroos")
top_6_player_10_skills <- select(top_6_player,Name,names(top_10_average_cor_skill))
radarDF <- gather(top_6_player_10_skills, key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(scores = radarDF, maxScale = 100, showToolTipLabel = TRUE)
library(ggplot2)
library(dplyr)
library(corrplot)
library(scales)   # needed for formatting y-axis labels to non-scientific type
library(radarchart)
library(tidyr)
library(tidyverse)
library(reshape2) # melt
library(ggthemes)
library(rworldmap) # world map
library(modelr)
library(radarchart) #Spider chart
############################################
library(e1071) #Q1.c -  skewness() and kurtosis()
library(grid) # geom_segment
library(ggrepel)# Use ggrepel::geom_label_repel
options("scipen"=100, "digits"=4)  # avoid scientific display of digits. Take 4 digits.
fifa_players <- data.frame(read.csv(url("https://raw.githubusercontent.com/DataScienceHU/DataAnalysisR_2021/master/data/fifa_data.csv")))
# Pre-processing:
for (i in c(3,6,7,10:71)) {
fifa_players[,i]<-as.numeric((fifa_players[,i]))
}
fifa<-na.omit(fifa_players)
fifa_players <- fifa
fifa_players_info <- fifa[,c(1:11)] # players general info
fifa_players_attribures <- fifa[,c(1,12:45, 6)] # players different skills. Add overall
fifa_players_positions <- fifa[,c(1,46:72,6,7)] # players ability at different positions . Add overall
fifa_players_indicators <- fifa[,c(1,6,7,10,11)] # players general ability
library(ggplot2)
library(dplyr)
library(corrplot)
library(scales)   # needed for formatting y-axis labels to non-scientific type
library(radarchart)
library(tidyr)
library(tidyverse)
library(reshape2) # melt
library(ggthemes)
library(rworldmap) # world map
library(modelr)
library(radarchart) #Spider chart
############################################
library(e1071) #Q1.c -  skewness() and kurtosis()
library(grid) # geom_segment
library(ggrepel)# Use ggrepel::geom_label_repel
options("scipen"=100, "digits"=4)  # avoid scientific display of digits. Take 4 digits.
fifa_players <- data.frame(read.csv(url("https://raw.githubusercontent.com/DataScienceHU/DataAnalysisR_2021/master/data/fifa_data.csv")))
# Pre-processing:
for (i in c(3,6,7,10:71)) {
fifa_players[,i]<-as.numeric((fifa_players[,i]))
}
fifa<-na.omit(fifa_players)
fifa_players <- fifa
fifa_players_info <- fifa[,c(1:11)] # players general info
fifa_players_attribures <- fifa[,c(1,12:45, 6)] # players different skills. Add overall
fifa_players_positions <- fifa[,c(1,46:72,6,7)] # players ability at different positions . Add overall
fifa_players_indicators <- fifa[,c(1,6,7,10,11)] # players general ability
new_table_3B <- left_join(fifa_players_attribures, fifa_players_indicators ,by=c("ID"="ID" ,"Overall"="Overall"))
cor_met_3B <- cor(new_table_3B[36:39],new_table_3B[2:35])
corrplot(cor_met_3B, method="circle",tl.cex =1,col=c("black", "white"),
bg="lightblue")+ theme(axis.text.x = element_text(face = "bold", size = 9, angle = -90, hjust = 0))+title("Cor plot of fifa players skills",xlab="player skills",ylab="player indicators")
sum_cor <- apply(cor_met_3B,2,sum)
ave_cor <- sum_cor/4
sort_top_ave <- sort(ave_cor)
top_10_average_cor_skill <-sort_top_ave[34:25]
top_10_table <- data.frame(top_10_average_cor_skill)
top_10_table
vec_name <- names(fifa_players_positions)
m = matrix(0,1,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(10)
new_data <- filter(new_data,new_data[i]==new_data[1,i])
new_data3C <- rbind(new_data3C,new_data)
}
new_data3C <- new_data3C[2:43,]
GK_filter <- filter(fifa_players_positions,Preferred.Positions=="GK ")
GK_filter <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
new_data3C <- rbind(new_data3C,GK_filter)
uniq_palyer  <-  new_data3C %>%
distinct(ID, .keep_all = TRUE)
top_11_player <- uniq_palyer %>%
arrange(desc(uniq_palyer[,29])) %>%
head(11)
top_11_player <- left_join(top_11_player, fifa[1:2] ,by=c("ID"="ID"))
top_11_player <-select(top_11_player,Name,Overall)
top_11_player
top_6_player <- filter(fifa,Name =="Cristiano Ronaldo"|Name=="L. Messi"|Name=="M. Neuer"|Name=="A. Vidal"|Name=="Sergio Ramos"|Name=="T. Kroos")
top_6_player_10_skills <- select(top_6_player,Name,names(top_10_average_cor_skill))
radarDF <- gather(top_6_player_10_skills, key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(scores = radarDF, maxScale = 100, showToolTipLabel = TRUE)
uniq_palyer
vec_name <- names(fifa_players_positions)
m = matrix(0,1,30)
new_data3C <- data.frame(m)
names(new_data3C) <- c(vec_name)
for (i in 2:27){
new_data <-  fifa_players_positions %>%
arrange(desc(fifa_players_positions[i])) %>%
head(10)
new_data <- filter(new_data,new_data[i]==new_data[1,i])
new_data3C <- rbind(new_data3C,new_data)
}
new_data3C <- new_data3C[2:43,]
GK_filter <- filter(fifa_players_positions,Preferred.Positions=="GK ")
GK_filter <-  GK_filter %>%
arrange(desc(GK_filter[,29])) %>%
head(1)
new_data3C <- rbind(new_data3C,GK_filter)
uniq_palyer  <-  new_data3C %>%
distinct(ID, .keep_all = TRUE)
top_11_player <- uniq_palyer %>%
arrange(desc(uniq_palyer[,29])) %>%
head(11)
top_11_player <- left_join(top_11_player, fifa[1:2] ,by=c("ID"="ID"))
top_11_player <-select(top_11_player,Name,Overall)
top_11_player
top_6_player <- filter(fifa,Name =="Cristiano Ronaldo"|Name=="L. Messi"|Name=="M. Neuer"|Name=="A. Vidal"|Name=="Sergio Ramos"|Name=="T. Kroos")
top_6_player_10_skills <- select(top_6_player,Name,names(top_10_average_cor_skill))
radarDF <- gather(top_6_player_10_skills, key=Label, value=Score, -Name) %>%
spread(key=Name, value=Score)
chartJSRadar(scores = radarDF, maxScale = 100, showToolTipLabel = TRUE)
new_table2c1$real_value <- ((new_table2c1$Potential-intercept)*(slope))
new_table2c1$real_value <- ((new_table2c1$Potential-intercept)*(slope))
filter_2C <- filter(fifa,Age < 21 & Potential > 70)
new_table2c <- select(filter_2C,Name,Age,Overall,Potential,Value)
reg_val_pot <- lm(Potential ~ Value, data = new_table2c)
reg_2C <- lm(data=new_table2c,Potential ~ Value)
sum_red_2C <- summary(reg_2C)
intercept <- sum_red_2C$coefficients[1]
slope <- 1/sum_red_2C$coefficients[2]
resid <- resid(reg_2C) #List of residuals
new_table2c$real_value <- resid
new_table2c1 <- new_table2c %>%
arrange(desc(real_value)) %>%
head(10)
new_table2c2 <- new_table2c %>%
arrange(desc(real_value))
new_table2c1$real_value <- ((new_table2c1$Potential-intercept)*(slope))
print(new_table2c1)
p2C <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_text(aes(label=Name), size = 2.5, hjust='bottom',check_overlap = TRUE, nudge_x = 0.05)+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3, nudge_x = 0.05,col="red")
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3,check_overlap = TRUE, nudge_x = 0.2,col="red")
p2C1
p2C
sum_red_2C <- summary(reg_2C)
sum_red_2C
filter_2C <- filter(fifa,Age < 21 & Potential > 70)
new_table2c <- select(filter_2C,Name,Age,Overall,Potential,Value)
reg_val_pot <- lm(Potential ~ Value, data = new_table2c)
reg_2C <- lm(data=new_table2c,Potential ~ Value)
sum_red_2C <- summary(reg_2C)
intercept <- sum_red_2C$coefficients[1]
slope <- 1/sum_red_2C$coefficients[2]
resid <- resid(reg_2C) #List of residuals
new_table2c$real_value <- resid
new_table2c1 <- new_table2c %>%
arrange(desc(real_value)) %>%
head(10)
new_table2c2 <- new_table2c %>%
arrange(desc(real_value))
new_table2c1$real_value <- ((new_table2c1$Potential-intercept)*(slope))
print(new_table2c1)
p2C <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_text(aes(label=Name), size = 2.5, hjust='bottom',check_overlap = TRUE, nudge_x = 0.05)+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3, nudge_x = 0.05,col="red")
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3,check_overlap = TRUE, nudge_x = 0.2,col="red")
p2C1
p2C
reg_val_pot <- lm( Value ~ Potential, data = new_table2c)
reg_2C <- lm(data=new_table2c,Value ~ Potential)
sum_red_2C <- summary(reg_2C)
sum_red_2C
filter_2C <- filter(fifa,Age < 21 & Potential > 70)
new_table2c <- select(filter_2C,Name,Age,Overall,Potential,Value)
reg_val_pot <- lm(Potential ~ Value, data = new_table2c)
reg_2C <- lm(data=new_table2c,Value ~ Potential)
sum_red_2C <- summary(reg_2C)
intercept <- sum_red_2C$coefficients[1]
slope <- sum_red_2C$coefficients[2]
resid <- resid(reg_2C) #List of residuals
new_table2c$real_value <- resid
new_table2c1 <- new_table2c %>%
arrange(desc(real_value)) %>%
head(10)
new_table2c2 <- new_table2c %>%
arrange(desc(real_value))
new_table2c1$real_value <- ((new_table2c1$Potential-intercept)*(slope))
print(new_table2c1)
p2C <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_text(aes(label=Name), size = 2.5, hjust='bottom',check_overlap = TRUE, nudge_x = 0.05)+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3, nudge_x = 0.05,col="red")
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3,check_overlap = TRUE, nudge_x = 0.2,col="red")
p2C1
p2C
filter_2C <- filter(fifa,Age < 21 & Potential > 70)
new_table2c <- select(filter_2C,Name,Age,Overall,Potential,Value)
reg_val_pot <- lm(Potential ~ Value, data = new_table2c)
reg_2C <- lm(data=new_table2c,Value ~ Potential)
sum_red_2C <- summary(reg_2C)
intercept <- sum_red_2C$coefficients[1]
slope <- sum_red_2C$coefficients[2]
resid <- resid(reg_2C) #List of residuals
new_table2c$real_value <- resid
new_table2c1 <- new_table2c %>%
arrange(desc(-real_value)) %>%
head(10)
new_table2c2 <- new_table2c %>%
arrange(desc(real_value))
new_table2c1$real_value <- ((new_table2c1$Potential-intercept)*(slope))
print(new_table2c1)
p2C <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_text(aes(label=Name), size = 2.5, hjust='bottom',check_overlap = TRUE, nudge_x = 0.05)+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3, nudge_x = 0.05,col="red")
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3,check_overlap = TRUE, nudge_x = 0.2,col="red")
p2C1
p2C
new_table2c1$real_value <- ((new_table2c1$Potential)*(slope)-intercept)
filter_2C <- filter(fifa,Age < 21 & Potential > 70)
new_table2c <- select(filter_2C,Name,Age,Overall,Potential,Value)
reg_val_pot <- lm(Potential ~ Value, data = new_table2c)
reg_2C <- lm(data=new_table2c,Value ~ Potential)
sum_red_2C <- summary(reg_2C)
intercept <- sum_red_2C$coefficients[1]
slope <- sum_red_2C$coefficients[2]
resid <- resid(reg_2C) #List of residuals
new_table2c$real_value <- resid
new_table2c1 <- new_table2c %>%
arrange(desc(-real_value)) %>%
head(10)
new_table2c2 <- new_table2c %>%
arrange(desc(real_value))
new_table2c1$real_value <- ((new_table2c1$Potential)*(slope)-intercept)
print(new_table2c1)
p2C <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_text(aes(label=Name), size = 2.5, hjust='bottom',check_overlap = TRUE, nudge_x = 0.05)+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3, nudge_x = 0.05,col="red")
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3,check_overlap = TRUE, nudge_x = 0.2,col="red")
p2C1
p2C
filter_2C <- filter(fifa,Age < 21 & Potential > 70)
new_table2c <- select(filter_2C,Name,Age,Overall,Potential,Value)
#reg_val_pot <- lm(Potential ~ Value, data = new_table2c)
reg_2C <- lm(data=new_table2c,Value ~ Potential)
sum_red_2C <- summary(reg_2C)
intercept <- sum_red_2C$coefficients[1]
slope <- sum_red_2C$coefficients[2]
resid <- resid(reg_2C) #List of residuals
new_table2c$real_value <- resid
new_table2c1 <- new_table2c %>%
arrange(desc(-real_value)) %>%
head(10)
new_table2c2 <- new_table2c %>%
arrange(desc(real_value))
new_table2c1$real_value <- ((new_table2c1$Potential)*(slope)-intercept)
print(new_table2c1)
p2C <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_text(aes(label=Name), size = 2.5, hjust='bottom',check_overlap = TRUE, nudge_x = 0.05)+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3, nudge_x = 0.05,col="red")
p2C1 <- ggplot(data = new_table2c2, aes(x = Potential, y = Value))+ geom_point(aes(color=Overall))+ geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +   geom_smooth(method="lm", se=TRUE, fullrange=FALSE, level=0.95) +  theme_gray() + theme(legend.position = c(0.94, 0.9)) + ggtitle('Ratings of Value as a function of Potential') + geom_text(data =new_table2c1, aes(label=Name), size = 3,check_overlap = TRUE, nudge_x = 0.2,col="red")
p2C1
p2C
